{"filename":"/home/admin/Github/podcastjs.github.io/docs/database.json","collections":[{"name":"documents","data":[{"path":"/contributing.md","id":0,"type":"child","text":"\n\n\nWant to report a bug, request a feature, contribute or translate podcastjs? At the moment most things can be\ncontributed via the main [podcastjs GitHub repository](https://github.com/podcastjs/podcastjs).\n\n* [Submit a bug report](https://github.com/podcastjs/podcastjs/issues?labels=bug)\n* [Submit a feature request](https://github.com/podcastjs/podcastjs/issues?labels=enhancement)\n* [Submit a pull request](https://github.com/podcastjs/podcastjs/pulls)\n","name":"contributing.md","layout":"post","title":"Contributing","description":"To contribute, follow the nex steps","category":"ai","tags":"series, fiction","comments":true,"author":"Rich Dotcom","thumbnail_image_url":"images/img_3.jpg","datetime_str":"20 August 2017","datetime":"2017-08-20T00:00:00.000Z","duration":"0:30:20","sound":{"type":"simple_url","value":"http://www.largesound.com/ashborytour/sound/AshboryBYU.mp3","language":"en"},"meta":{"revision":0,"created":1717971412271,"version":0},"$loki":1},{"path":"/install/installing-podcastjs.md","id":2,"parent":1,"type":"child","text":"\n\nMake sure you have met the [minimum requirements](%base_url%/install/requirements) then install podcastjs:\n\n**Note:** It is recommended to create a new Git repository to store your documentation files and then install podcastjs as a dependency into it. See the [example directory](https://github.com/podcastjs/podcastjs/tree/master/example) to see how this is done.\n\n1. Switch to your existing or new project directory.\n2. Add podcastjs to your project via NPM's package.json file or downloading the latest version from the [releases page](https://github.com/podcastjs/podcastjs/releases)\n3. In a terminal, run `npm install` to install the node dependencies\n4. To start podcastjs, run `npm start` (or `npm run start_win` on Windows)\n5. Visit `http://localhost:3000` in your web browser\n\nYou can now start [creating pages](%base_url%/usage/creating-pages).\n\n**NOTE:** See the [Production Notes](%base_url%/install/production-notes) when installing for a live site.\n","name":"installing-podcastjs.md","layout":"post","title":"Â¿How to install podcastjs?","description":"Just open a shell and execute.","category":"ai","tags":"series, fiction","comments":true,"author":"Rich Dotcom","thumbnail_image_url":"images/img_3.jpg","datetime_str":"24 August 2017","datetime":"2017-08-24T00:00:00.000Z","duration":"0:30:20","sound":{"type":"vocaroo_url","value":"https://vocaroo.com/embed/1jkkNDCvZhyR?autoplay=0","language":"es"},"meta":{"revision":0,"created":1717971412272,"version":0},"$loki":2},{"path":"/install/production-notes.md","id":3,"parent":1,"type":"child","text":"\n\n\nWhen running a live site you'll want to set the `PORT` env variable to `80` so you don't need to add `:3000` to the URL.\nThis requires root privileges and is not recommended.\n\nInstead it is preferred to use a reverse proxy for security reasons.\nHeroku and other services handle this aspect for you, but you can implement your own reverse proxy with Nginx or Apache.\n**See [Related Projects](%base_url%/related-projects) for deployment scripts to use on your own servers**\n\n## Listening Port\nYou can change the listening port anytime by setting the environment variable in your shell's profile, or running in-line as below:\n`$ PORT=1234 npm start`\n\n## Listening Host Address / IP\n\n### Defaults\npodcastjs listens only to localhost (`127.0.0.1`) traffic by default now (v0.17.0).  \nThis is to prevent unintended exposure and access of your documentation from older versions.  \nPrevious versions before v0.17.0 would bind to all IP addresses, which could accidentally make documents available on the public internet.  \n\n### Override\nTo override the default IP host, please look above at an Nginx reverse proxy to access `127.0.0.1` or you can manually set the IP Host (private or public) setting the Environment Variable `HOST` somewhere.  \n`$ HOST=192.168.0.10 npm start`\n","name":"production-notes.md","layout":"post","title":"Production usage","description":"After write the markdown","category":"ai","tags":"series, fiction","comments":true,"author":"Rich Dotcom","thumbnail_image_url":"images/img_3.jpg","datetime_str":"23 August 2017","datetime":"2017-08-23T00:00:00.000Z","duration":"0:30:20","sound":{"type":"simple_url","value":"https://pages.cs.wisc.edu/~cain/mp3/velveteens/bitter.mp3","language":"es"},"meta":{"revision":0,"created":1717971412273,"version":0},"$loki":3},{"path":"/install/requirements.md","id":4,"parent":1,"type":"child","text":"\n\n\nTo run podcastjs you need to have the following:\n\n* [Node.js](http://nodejs.org) **v10.22.1** (or later)\n\nHere are a [list of services](https://github.com/joyent/node/wiki/Node-Hosting) that provide Node hosting\nif you are looking to publish your knowledgebase online.\n","name":"requirements.md","layout":"post","title":"Requirements","description":"Just nodejs","category":"ai","tags":"series, fiction","comments":true,"author":"Rich Dotcom","thumbnail_image_url":"images/img_3.jpg","datetime_str":"22 August 2017","datetime":"2017-08-22T00:00:00.000Z","duration":"0:30:20","sound":{"type":"simple_url","value":"https://file-examples.com/storage/fe3cb26995666504a8d6180/2017/11/file_example_MP3_2MG.mp3","language":"en"},"meta":{"revision":0,"created":1717971412274,"version":0},"$loki":4},{"path":"/podcasters.md","id":5,"type":"child","text":"\n\n\npodcastjs is a Knowledgebase platform for [Node.js](http://nodejs.org) that uses static\n[Markdown](http://daringfireball.net/projects/markdown) files to power the knowledgebase.\n\npodcastjs can be called a \"static site generator\" of sorts as it doesn't require a database. All\nof your content is stored in the `content` folder in Markdown (`.md`) files and the entire\nknowledgebase structure and content is generated by podcastjs. This is good because it's:\n\n* **Simple:** You can create and manage an entire knowledge base using your favorite text editor\n* **Flat:** podcastjs is a \"flat file\" CMS, meaning no database woe's, no MySQL queries, nothing\n* **Fast:** podcastjs is seriously lightweight and doesn't use a database, making it super fast\n\npodcastjs features:\n\n* Responsive default template (powered by [bootstrap-simple-admin-template](https://github.com/alexis-luna/bootstrap-simple-admin-template))\n* Full-text search powered by [LokiJS](https://github.com/techfort/LokiJS)\n\ntechnologies:\n\n* nodejs\n* [markdown-it](https://www.npmjs.com/package/markdown-it) for easy templating\n* [GitHub Flavored Markdown](https://help.github.com/articles/github-flavored-markdown)\n* [nodeboot-web-security-starter](https://github.com/jrichardsz-software-architect-tools/nodeboot-web-security-starter)\n","name":"podcasters.md","layout":"post","title":"Podcasters","description":"To add the podcasters","category":"ai","tags":"series, fiction","comments":true,"author":"Rich Dotcom","thumbnail_image_url":"images/img_3.jpg","datetime_str":"18 August 2017","datetime":"2017-08-18T00:00:00.000Z","duration":"0:30:20","sound":{"type":"vocaroo_url","value":"https://vocaroo.com/embed/1jkkNDCvZhyR?autoplay=0","language":"es"},"meta":{"revision":0,"created":1717971412274,"version":0},"$loki":5},{"path":"/showcase.md","id":6,"type":"child","text":"\n\n\nUsing podcastjs in the wild? We'd love to see it.  \nAdd your site to the [podcastjs Showcase](https://github.com/podcastjs/podcastjs/wiki/podcastjs-Showcase).\n","name":"showcase.md","layout":"post","title":"Showcase","description":"A showcase","category":"ai","tags":"series, fiction","comments":true,"author":"Rich Dotcom","thumbnail_image_url":"images/img_3.jpg","datetime_str":"17 August 2017","datetime":"2017-08-17T00:00:00.000Z","duration":"0:30:20","sound":{"type":"simple_url","value":"http://www.largesound.com/ashborytour/sound/AshboryBYU.mp3","language":"en"},"meta":{"revision":0,"created":1717971412275,"version":0},"$loki":6},{"path":"/templates/customizing-the-template.md","id":8,"parent":7,"type":"child","text":"\n\n\nTemplating in podcastjs is powered by [Mustache](http://mustache.github.io). All of the template views can\nbe found in the `themes/default/` folder. Feel free to customize the template as you wish. The template structure\nis as follows:\n\n* `layout.html`: The parent template. You'll probably want to customize this first\n* `home.html`: The homepage template. Shown if you don't have an [index.md](%base_url%/usage/custom-homepage)\n* `page.html`: The template used for single pages\n* `search.html`: The template used for search results\n* `error.html`: Shown when podcastjs encounters an error or can't find a page\n\nRemember you will need to restart the app after changing the template.\n\n## Enable Features on Pages by Altering Config Settings\n\nSome features can be enabled on your pages by changing settings in the `config.default.js` file.\n\n### Enable Table of Contents\n\nIn `config.default.js` set `table_of_contents` to `true`. podcastjs uses [markdown-toc](https://github.com/jonschlinkert/markdown-toc) to generate the table of contents on pages, so you can customize the apperance of the tables of contents by specifying values for parameters in the `table_of_contents_options` object in `config.default.js`.\n\n### Display Site Menu on Pages\n\nIn `config.default.js` set `menu_on_pages` to `true`. To make the menu collapsible, so that category headings can be expanded or collapsed - useful for sites with lots of pages - set `menu_on_pages_collapsible` to `true`.\n\n## Public Files\n\nAll static files in podcastjs (images, CSS, Javascript files etc.) are served from the `public` folder. This\nis so that no one can access any other files in the install. Only files in the `public` folder are available\nto the public.\n\nIt's worth noting that when customising podcastjs you should always make your own files rather than customising\nthe existing podcastjs files, so that your changes don't get lost when you\n[update podcastjs](%base_url%/updates/updating-podcastjs).\n\n## Template Variables\n\nBelow are a list of template variables available to use in their respective templates:\n\n**home.html**\n\n* `config`: Holds an array of values from `config.js`\n* `pages`: Structured list of categories and pages (used for navigation)\n* `body_class`: Class for the `<body>` tag\n\n**page.html**\n\n* `config`: Holds an array of values from `config.js`\n* `pages`: Structured list of categories and pages (used for navigation)\n* `body_class`: Class for the `<body>` tag\n* `meta`: Holds an array of values taken from the page meta comment block (e.g. `meta.title`)\n* `content`: The HTML content of the page\n* `last_modified`: The formatted date of the time the file was last modified\n\n**search.html**\n\n* `config`: Holds an array of values from `config.js`\n* `pages`: Structured list of categories and pages (used for navigation)\n* `body_class`: Class for the `<body>` tag\n* `search`: The current search query\n* `searchResults`: An array search results\n\n## Array Structure\n\nThe `pages` array has a structure similar to the following:\n\n* `slug`: The category slug\n* `title`: The category title\n* `is_index`: True for the top level files (ie not in a category)\n* `class`: CSS class\n* `sort`: The sort index for this category\n* `files[]`: Array of pages in this category\n* `slug`: The page slug\n* `title`: The page title\n* `active`: True if the current page is \"active\"\n* `sort`: The sort index for this page\n\nThe `searchResults` array contains items which include:\n\n* `slug`: The page slug\n* `title`: The page title\n* `body`: The page content\n* `excerpt`: The page excerpt\n","name":"customizing-the-template.md","layout":"post","title":"Single post template","description":"This file is located","category":"ai","tags":"series, fiction","comments":true,"author":"Rich Dotcom","thumbnail_image_url":"images/img_3.jpg","datetime_str":"21 August 2017","datetime":"2017-08-21T00:00:00.000Z","duration":"0:30:20","meta":{"revision":0,"created":1717971412275,"version":0},"$loki":7}],"idIndex":null,"binaryIndices":{},"constraints":null,"uniqueNames":[],"transforms":{},"objType":"documents","dirty":false,"cachedIndex":null,"cachedBinaryIndex":null,"cachedData":null,"adaptiveBinaryIndices":true,"transactional":false,"cloneObjects":false,"cloneMethod":"parse-stringify","asyncListeners":false,"disableMeta":false,"disableChangesApi":true,"disableDeltaChangesApi":true,"autoupdate":false,"serializableIndices":true,"disableFreeze":true,"ttl":null,"maxId":7,"DynamicViews":[],"events":{"insert":[],"update":[],"pre-insert":[],"pre-update":[],"close":[],"flushbuffer":[],"error":[],"delete":[null],"warning":[null]},"changes":[],"dirtyIds":[]}],"databaseVersion":1.5,"engineVersion":1.5,"autosave":false,"autosaveInterval":5000,"autosaveHandle":null,"throttledSaves":true,"options":{"serializationMethod":"normal","destructureDelimiter":"$<\n"},"persistenceMethod":"fs","persistenceAdapter":null,"verbose":false,"events":{"init":[null],"loaded":[],"flushChanges":[],"close":[],"changes":[],"warning":[]},"ENV":"NODEJS"}